drop view V_USER_ROLE;
drop table USER_ROLE;
drop table "USER";
drop table ROLE_ROLE;
drop table "ROLE";


CREATE TABLE "ROLE" (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	ROLE_NAME VARCHAR(255) NOT NULL,
	DESCRIPTION VARCHAR(2040),
	CONSTRAINT PK_ROLE PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX UX_ROLE_ROLE_NAME ON ROLE (ROLE_NAME);

CREATE TABLE ROLE_ROLE (
	RIGHT_ID VARCHAR(255) NOT NULL,
	ROLE_ID VARCHAR(255) NOT NULL,
	CONSTRAINT PK_ROLE_ROLE PRIMARY KEY (RIGHT_ID, ROLE_ID),
	CONSTRAINT FK_ROLE_ROLE_RIGHT_ID FOREIGN KEY (RIGHT_ID) REFERENCES "ROLE"(ID),
	CONSTRAINT FK_ROLE_ROLE_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES "ROLE"(ID)
);

CREATE TABLE "USER" (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_NAME VARCHAR(255) NOT NULL,
	FIRST_NAME VARCHAR(255),
	LAST_NAME VARCHAR(255),
	PASSWORD VARCHAR(255),
	CONSTRAINT PK_USER PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX UX_USER_ROLE_NAME ON "USER" (USER_NAME);

CREATE TABLE USER_ROLE (
	USER_ID INTEGER NOT NULL,
	ROLE_ID INTEGER NOT NULL,
	CONSTRAINT PK_USER_ROLE PRIMARY KEY (USER_ID, ROLE_ID),
	CONSTRAINT FK_USER_ROLE_USER_ID FOREIGN KEY (USER_ID) REFERENCES "USER"(ID),
	CONSTRAINT FK_USER_ROLE_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES "ROLE"(ID)
);

CREATE FORCE VIEW V_USER_ROLE AS
WITH RECURSIVE TEMP(RIGHT_ID, ROLE_ID, LEVEL) AS (
    (SELECT
        ROOT.ROLE_ID AS RIGHT_ID,
        ROOT.ROLE_ID,
        0 AS LEVEL
    FROM ROLE_ROLE ROOT
    GROUP BY ROOT.ROLE_ID)
    UNION ALL
    (SELECT
        SUB.RIGHT_ID,
        TEMP.ROLE_ID,
        TEMP.LEVEL + 1 AS LEVEL
    FROM TEMP
    JOIN ROLE_ROLE SUB
        ON TEMP.RIGHT_ID = SUB.ROLE_ID
        AND TEMP.LEVEL < 20)
)
SELECT
    U.ID USER_ID,
    U.USER_NAME,
    R.ROLE_NAME,
    TEMP.LEVEL
FROM TEMP
JOIN USER_ROLE UR
    ON UR.ROLE_ID = TEMP.ROLE_ID
JOIN "ROLE" R
	ON R.ID = TEMP.RIGHT_ID
JOIN "USER" U
	ON U.ID = UR.USER_ID;